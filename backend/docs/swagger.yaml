openapi: 3.0.0
info:
  version: 1.0.0
  title: Férj/Feleség kölcsönző Szerver API Dokumentáció
  description: A Férj/Feleség kölcsönző végpontjainak részletes leírása és használata
servers:
  - url: http://localhost:3000
paths:
  /users:
    get: 
      description: Returns a list of users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: ''
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: User create is success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users/{_id}:
    get:
      description: Get a user
      parameters:
        - in: path
          name: _id
          required: true
          example: "62b9115ba96eee70e622c635"
          schema:
            type: string
      responses:
        "200":
          description: Returns a User
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/User"
        "404":
          description: Requested user doesn't exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      description: Updates a user
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Success user update
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      description: Delete a user
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success user delete
          content:
            application/json:
              schema:
                type: object
                example: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /categories:
    get: 
      description: Returns a list of category
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: ''
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new category
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Category"
      responses:
        "201":
          description: Category create is success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /categories/{_id}:
    get:
      description: Get a category
      parameters:
        - in: path
          name: _id
          required: true
          example: "62b9115ba96eee70e622c635"
          schema:
            type: string
      responses:
        "200":
          description: Returns a category
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Category"
        "404":
          description: Requested user doesn't exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      description: Updates a category
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Category"
      responses:
        "200":
          description: Success category update
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      description: Delete a category
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success category delete
          content:
            application/json:
              schema:
                type: object
                example: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /jobs:
    get: 
      description: Returns a list of jobs
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: ''
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new job
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Job"
      responses:
        "201":
          description: Job create is success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /jobs/{_id}:
    get:
      description: Get a job
      parameters:
        - in: path
          name: _id
          required: true
          example: "62b9115ba96eee70e622c635"
          schema:
            type: string
      responses:
        "200":
          description: Returns a job
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Job"
        "404":
          description: Requested user doesn't exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      description: Updates a job
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Job"
      responses:
        "200":
          description: Success job update
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      description: Delete a job
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success job delete
          content:
            application/json:
              schema:
                type: object
                example: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /reviews:
    get: 
      description: Returns a list of reviews
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: ''
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new review
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Review"
      responses:
        "201":
          description: Review create is success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Review"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /reviews/{_id}:
    get:
      description: Get a review
      parameters:
        - in: path
          name: _id
          required: true
          example: "62b9115ba96eee70e622c635"
          schema:
            type: string
      responses:
        "200":
          description: Returns a review
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Review"
        "404":
          description: Requested user doesn't exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      description: Updates a review
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Review"
      responses:
        "200":
          description: Success review update
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Review"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      description: Delete a review
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success review delete
          content:
            application/json:
              schema:
                type: object
                example: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /workers:
    get: 
      description: Returns a list of workers
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: ''
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new worker
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Worker"
      responses:
        "201":
          description: Worker create is success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Worker"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /workers/{_id}:
    get:
      description: Get a worker
      parameters:
        - in: path
          name: _id
          required: true
          example: "62b9115ba96eee70e622c635"
          schema:
            type: string
      responses:
        "200":
          description: Returns a Worker
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Worker"
        "404":
          description: Requested worker doesn't exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      description: Updates a worker
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Worker"
      responses:
        "200":
          description: Success worker update
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Worker"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      description: Delete a worker
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success worker delete
          content:
            application/json:
              schema:
                type: object
                example: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      required: 
        - user_name
        - first_name
        - last_name
        - gender
        - birth_date
        - address
        - email
        - mobil_number
        - role
      properties:
        user_name: 
          type: string
        first_name: 
          type: string
        last_name: 
          type: string
        gender:
          type: string
        birth_date:
          type: object
        photo:
          type: string
        address:
          type: object
          properties:
            country: 
              type: string
            zipCode: 
              type: string
            city:
              type: string
            street:
              type: string
            number:
              type: string
        email: 
          type: string 
        mobil_number:
          type: string 
        role:
          type: number
    Category:
      type: object
      required: 
        - title
        - description
      properties:
        title:
          type: string
        description:
          type: string
    Job:
      type: object
      required: 
        - title
        - category
        - description
        - settlement
        - tools
        - active
        - editor_user
      properties:
        title:
          type: string
        category: 
          type: object
          $ref: '#/components/schemas/category'
        description:
          type: string
        settlement:
          type: string
        date:
          type: object
        time:
          type: string
        tools:
          type: boolean
        wage:
          type: string
        amount:
          type: number
        active:
          type: boolean
        editor_user:
          type: object
          $ref: '#/components/schemas/user'
        worker_user:
          type: object
          $ref: '#/components/schemas/user'
    Review:
      type: object
      required:
        - editor_user
        - rated_user
        - score
        - review_date
      properties:
        editor_user:
          type: object
          $ref: '#/components/schemas/user'
        worker_user:
          type: object
          $ref: '#/components/schemas/user'
        score:
          type: number
        positive:
          type: string
        negative:
          type: string
        review_date:
          type: object
    Worker:
      type:
      required:
        - editor_user
        - category
        - date_from
        - date_to
        - description
        - settlement
      properties:
        editor_user:
          type: object
          $ref: '#/components/schemas/user'
        worker_user:
          type: object
          $ref: '#/components/schemas/category'
        date_from: 
          type: object
        date_to: 
          type: object
        description: 
          type: string
        settlement: 
          type: string
    Error:
      type: object
      properties:
        hasError:
          type: boolean
        message:
          type: string





